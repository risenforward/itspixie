types: ./types.graphql

# Wilcard permission that allows all API operations for everyone
# for the sake of the demo. In a real-world project, you would
# specify permissions only for certain operations and can further constrain
# who should be able to perform an operation using permission queries.
permissions:
- operation: "*"

functions:
  # Payment function using the implementation in `./src/pay.js`
  pay:
    handler:
      code:
        src: ./src/pay.js
        # Define environment variable accessible by the function in `./src/pay.js`
        environment:
          STRIPE_KEY: pk_test_6pRNASCoBOKtIshFeQd4XMUh
    type: resolver
    schema: ./src/pay.graphql

  # Authentication functions from: `https://github.com/graphcool/modules/tree/master/authentication/email-password`
  signup:
    type: resolver
    schema: ./src/email-password/signup.graphql
    handler:
      code:
        src: ./src/email-password/signup.js
  authenticate:
    type: resolver
    schema: ./src/email-password/authenticate.graphql
    handler:
      code:
        src: ./src/email-password/authenticate.js
  loggednInUser:
    type: resolver
    schema: ./src/email-password/loggedInUser.graphql
    handler:
      code:
        src: ./src/email-password/loggedInUser.js

# Permanent Auth Token / Root Tokens
rootTokens:
  - defaultToken
  - signup
  - authenticate
  - loggedInUser
