// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`init choose local 1`] = `
Object {
  "datamodel.graphql": "type User {
  id: ID! @unique
  name: String!
}
",
  "docker-compose.yml": "version: '3'
services:
  prisma:
    restart: always
    ports:
    - \\"4466:4466\\"
    environment:
      PRISMA_CONFIG: |
        port: 4466
        databases:
          default:
            connector: mysql
            active: true
            host: db
            port: 3306
  db:
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: prisma
",
  "prisma.yml": "endpoint: http://localhost:4466
datamodel: datamodel.graphql",
}
`;

exports[`init choose local 2`] = `
"Created 3 new files:                                                                          

  prisma.yml           Prisma service definition
  datamodel.graphql    GraphQL SDL-based datamodel (foundation for database)
  docker-compose.yml   Docker configuration file

Run docker-compose up -d.
Then you can run $ prisma deploy to deploy your database service.
"
`;

exports[`init choose local 3`] = `""`;

exports[`init test project 1`] = `
Object {
  "datamodel.graphql": "",
  "docker-compose.yml": "version: '3'
services:
  prisma:
    restart: always
    ports:
    - \\"4466:4466\\"
    environment:
      PRISMA_CONFIG: |
        port: 4466
        databases:
          default:
            connector: postgres
            active: true
            host: localhost
            port: 5432",
  "prisma.yml": "endpoint: http://localhost:4466
datamodel: datamodel.graphql",
}
`;

exports[`init test project 2`] = `
"Created 3 new files:                                                                          

  prisma.yml           Prisma service definition
  datamodel.graphql    GraphQL SDL-based datamodel (foundation for database)
  docker-compose.yml   Docker configuration file

Run docker-compose up -d.
Then you can run $ prisma deploy to deploy your database service.
"
`;

exports[`init test project 3`] = `
"
Connecting to database... âœ”
"
`;
